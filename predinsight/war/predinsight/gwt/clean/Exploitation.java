package com.demo.predinsight.client;

import java.util.ArrayList;

import com.google.gwt.dom.client.Style.Unit;
import com.google.gwt.event.dom.client.ClickEvent;
import com.google.gwt.event.dom.client.ClickHandler;
import com.google.gwt.user.client.ui.Button;
import com.google.gwt.user.client.ui.CheckBox;
import com.google.gwt.user.client.ui.DockLayoutPanel;
import com.google.gwt.user.client.ui.FlexTable;
import com.google.gwt.user.client.ui.HasHorizontalAlignment;
import com.google.gwt.user.client.ui.HorizontalPanel;
import com.google.gwt.user.client.ui.Label;
import com.google.gwt.user.client.ui.ListBox;
import com.google.gwt.user.client.ui.RadioButton;
import com.google.gwt.user.client.ui.VerticalPanel;

public class Exploitation extends Content {

	private DockLayoutPanel mainPanel = new DockLayoutPanel((Unit.PX));
	private Label title = new Label("Explore your newly trained model");
	private FlexTable attributesTable = new FlexTable();
	private HorizontalPanel attribManagement = new HorizontalPanel();
	private ListBox attribList = new ListBox();
	private Button attribAddButton = new Button("add attribute");
	private HorizontalPanel buttonsPanel = new HorizontalPanel();
	private Button predictButton = new Button("predict");
	private Button startOverButton = new Button("start over");
	private VerticalPanel radioPanel = new VerticalPanel();
	private Label radioLabel = new Label("Undefined attributes default setting");
	private RadioButton randomRadio = new RadioButton("defaultValue", "random");
	private RadioButton meanRadio = new RadioButton("defaultValue", "mean");
	private VerticalPanel explPanel = new VerticalPanel();
	private Label explTitle = new Label("Influences :");
	private InfDesc infdesc = new InfDesc("truc");
	
	private ArrayList<String> currentAttributes = new ArrayList<String>();
	
	private String[] test = {"truc","bidule","machin","chouette"};
	
	public Exploitation() {
		
		for(int i = 0; i<test.length ;i++) {
			attribList.addItem(test[i]);
		}
		
		attributesTable.setText(0, 0, "name");
		attributesTable.setText(0, 1, "missing");
		attributesTable.setText(0, 2, "value");
		attributesTable.setText(0, 3, "remove");
		
		
		radioPanel.add(radioLabel);
		radioPanel.add(randomRadio);
		radioPanel.add(meanRadio);
		
		attribManagement.add(radioPanel);
		attribManagement.add(attribList);
		attribManagement.add(attribAddButton);
		
		buttonsPanel.setHorizontalAlignment(HasHorizontalAlignment.ALIGN_RIGHT);
		buttonsPanel.add(startOverButton);
		buttonsPanel.add(predictButton);
		
		explPanel.add(explTitle);
		explPanel.add(infdesc);
		
		mainPanel.addNorth(title, 50);
		mainPanel.addSouth(buttonsPanel, 50);
		buttonsPanel.setSize("100%", "100%");
		mainPanel.addSouth(attribManagement, 100);
		mainPanel.addEast(explPanel,500);
		mainPanel.add(attributesTable);
		
		attribAddButton.addClickHandler(new ClickHandler() {
		   public void onClick(ClickEvent event) {
		     addAttrib();
		   }
		});
		
		startOverButton.addClickHandler(new ClickHandler() {
			public void onClick(ClickEvent event) {
				ContentContainer.getInstance().setContent(new Selection());
			}
		});
		
		mainPanel.setSize("1600px","800px");
		
		initWidget(mainPanel);
	}
	
	
	
	private void addAttrib() {
		String attribute = attribList.getSelectedValue();
		if (currentAttributes.contains(attribute))
			return;
		
		 // Add the stock to the table.
		int row = attributesTable.getRowCount();
		currentAttributes.add(attribute);
		attributesTable.setText(row, 0, attribute);
		
		CheckBox check = new CheckBox();
		attributesTable.setWidget(row, 1, check);
		
		ListBox list = new ListBox();
		for(int i = 0; i<test.length ;i++) {
			list.addItem(test[i]);
		}
		attributesTable.setWidget(row, 2, list);
		
		Button remove = new Button("x");
		remove.addClickHandler(new ClickHandler() {
		      public void onClick(ClickEvent event) {
		        int removedIndex = currentAttributes.indexOf(attribute);
		        currentAttributes.remove(removedIndex);
		        attributesTable.removeRow(removedIndex + 1);
		      }
		});
		
		attributesTable.setWidget(row, 3, remove);
	}
}
